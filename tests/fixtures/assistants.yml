http_interactions:
- request:
    method: post
    uri: https://api.openai.com/v1/assistants
    body:
      encoding: ''
      string: '{"model":"gpt-4o","name":"Socrates","tools":[{"type":"file_search"}],"response_format":{"type":"text"}}'
    headers:
      Accept: application/json, text/xml, application/xml, */*
      Authorization: My bearer token is safe
      OpenAI-Beta: assistants=v2
      Content-Type: application/json
  response:
    status:
      status_code: 200
      category: Success
      reason: OK
      message: 'Success: (200) OK'
    headers:
      date: Tue, 21 May 2024 01:09:32 GMT
      content-type: application/json
      openai-version: '2020-10-01'
      openai-organization: user-xzxbylwbsz2obysv34wdfreh
      x-request-id: req_689325b03f2d7389c3f92d4b0cb67da4
      openai-processing-ms: '93'
      strict-transport-security: max-age=15724800; includeSubDomains
      cf-cache-status: DYNAMIC
      server: cloudflare
      cf-ray: 8870ae7aac70274b-ADL
      content-encoding: gzip
      alt-svc: h3=":443"; ma=86400
    body:
      encoding: ''
      file: no
      string: |-
        {
          "id": "asst_gxDbA4CKIXfCaZVW0eVd4cPR",
          "object": "assistant",
          "created_at": 1716253772,
          "name": "Socrates",
          "description": null,
          "model": "gpt-4o",
          "instructions": null,
          "tools": [
            {
              "type": "file_search"
            }
          ],
          "top_p": 1.0,
          "temperature": 1.0,
          "tool_resources": {
            "file_search": {
              "vector_store_ids": []
            }
          },
          "metadata": {},
          "response_format": {
            "type": "text"
          }
        }
  recorded_at: 2024-05-21 01:09:39 GMT
  recorded_with: vcr/1.2.2, webmockr/0.9.0
- request:
    method: get
    uri: https://api.openai.com/v1/assistants?limit=20&order=desc
    body:
      encoding: ''
      string: ''
    headers:
      Accept: application/json, text/xml, application/xml, */*
      Authorization: My bearer token is safe
      OpenAI-Beta: assistants=v2
  response:
    status:
      status_code: 200
      category: Success
      reason: OK
      message: 'Success: (200) OK'
    headers:
      date: Tue, 21 May 2024 01:09:32 GMT
      content-type: application/json
      openai-version: '2020-10-01'
      openai-organization: user-xzxbylwbsz2obysv34wdfreh
      x-request-id: req_c0c837f5216ee22c35fa709a6d76ad95
      openai-processing-ms: '133'
      strict-transport-security: max-age=15724800; includeSubDomains
      cf-cache-status: DYNAMIC
      server: cloudflare
      cf-ray: 8870ae7db9ae274b-ADL
      content-encoding: gzip
      alt-svc: h3=":443"; ma=86400
    body:
      encoding: ''
      file: no
      string: |-
        {
          "object": "list",
          "data": [
            {
              "id": "asst_gxDbA4CKIXfCaZVW0eVd4cPR",
              "object": "assistant",
              "created_at": 1716253772,
              "name": "Socrates",
              "description": null,
              "model": "gpt-4o",
              "instructions": null,
              "tools": [
                {
                  "type": "file_search"
                }
              ],
              "top_p": 1.0,
              "temperature": 1.0,
              "tool_resources": {
                "file_search": {
                  "vector_store_ids": []
                }
              },
              "metadata": {},
              "response_format": {
                "type": "text"
              }
            },
            {
              "id": "asst_DKztw8o577CirDw4q2rcxuae",
              "object": "assistant",
              "created_at": 1716253753,
              "name": null,
              "description": null,
              "model": "gpt-4o",
              "instructions": null,
              "tools": [
                {
                  "type": "file_search"
                }
              ],
              "top_p": 1.0,
              "temperature": 1.0,
              "tool_resources": {
                "file_search": {
                  "vector_store_ids": []
                }
              },
              "metadata": {
                "test": "test-runs"
              },
              "response_format": {
                "type": "text"
              }
            },
            {
              "id": "asst_xt8GHq7qDKHIhIc6smD4jERM",
              "object": "assistant",
              "created_at": 1716253747,
              "name": null,
              "description": null,
              "model": "gpt-4o",
              "instructions": null,
              "tools": [
                {
                  "type": "file_search"
                }
              ],
              "top_p": 1.0,
              "temperature": 1.0,
              "tool_resources": {
                "file_search": {
                  "vector_store_ids": [
                    "vs_xF3YsiLZVDOkd3glulu1xdup"
                  ]
                }
              },
              "metadata": {
                "test": "test-messages"
              },
              "response_format": {
                "type": "text"
              }
            },
            {
              "id": "asst_3YDbKvoRE7mSUISRDJuumHvW",
              "object": "assistant",
              "created_at": 1716253747,
              "name": "Jason",
              "description": null,
              "model": "gpt-4o",
              "instructions": null,
              "tools": [],
              "top_p": 1.0,
              "temperature": 1.0,
              "tool_resources": {},
              "metadata": {},
              "response_format": {
                "type": "json_object"
              }
            },
            {
              "id": "asst_am2o59tgr9rUF9ERbXCDs8W0",
              "object": "assistant",
              "created_at": 1715670233,
              "name": "Medication allergy assistant",
              "description": null,
              "model": "gpt-4-0125-preview",
              "instructions": "You are a subagent in a medical AI system. Your task is to examine a patient profile to determine if they may be allergic to a particular medication. When making your decision, take into account both formally documented allergies, as well as information that suggests a possible allergy. Err on the side of caution. If there is a potential allergy, the medication will be flagged for human review. The next two messages will contain the free-form patient profile, then the name of the medication. You should then respond with your decision regarding whether or not the patient has an allergy to the medication. \n\nYou MUST respond in JSON and you MUST follow the JSON schema provided below. NEVER deviate from the schema. Here is the schema:\n\n```\n{\n  'type': 'object',\n  'required': ['potential_allergy'],\n  'properties': {\n    'potential_allergy': {\n      'type': 'boolean', \n      'description': 'Does the patient have a potential allergy to the medication?'\n    }\n  }\n}\n```\n",
              "tools": [],
              "top_p": 1.0,
              "temperature": 1.0,
              "tool_resources": {},
              "metadata": {},
              "response_format": {
                "type": "json_object"
              }
            },
            {
              "id": "asst_zguU32AXg4F3r2jVKIrMcIOl",
              "object": "assistant",
              "created_at": 1715670229,
              "name": "Medication allergy assistant",
              "description": null,
              "model": "gpt-4-0125-preview",
              "instructions": "You are a subagent in a medical AI system. Your task is to examine a patient profile to determine if they may be allergic to a particular medication. When making your decision, take into account both formally documented allergies, as well as information that suggests a possible allergy. Err on the side of caution. If there is a potential allergy, the medication will be flagged for human review. The next two messages will contain the free-form patient profile, then the name of the medication. You should then respond with your decision regarding whether or not the patient has an allergy to the medication. \n\nYou MUST respond in JSON and you MUST follow the JSON schema provided below. NEVER deviate from the schema. Here is the schema:\n\n```\n{\n  'type': 'object',\n  'required': ['potential_allergy'],\n  'properties': {\n    'potential_allergy': {\n      'type': 'boolean', \n      'description': 'Does the patient have a potential allergy to the medication?'\n    }\n  }\n}\n```\n",
              "tools": [],
              "top_p": 1.0,
              "temperature": 1.0,
              "tool_resources": {},
              "metadata": {},
              "response_format": {
                "type": "json_object"
              }
            },
            {
              "id": "asst_zp0f7IwEQRrZXM52hahzPzMg",
              "object": "assistant",
              "created_at": 1715670225,
              "name": "Medication allergy assistant",
              "description": null,
              "model": "gpt-4-0125-preview",
              "instructions": "You are a subagent in a medical AI system. Your task is to examine a patient profile to determine if they may be allergic to a particular medication. When making your decision, take into account both formally documented allergies, as well as information that suggests a possible allergy. Err on the side of caution. If there is a potential allergy, the medication will be flagged for human review. The next two messages will contain the free-form patient profile, then the name of the medication. You should then respond with your decision regarding whether or not the patient has an allergy to the medication. \n\nYou MUST respond in JSON and you MUST follow the JSON schema provided below. NEVER deviate from the schema. Here is the schema:\n\n```\n{\n  'type': 'object',\n  'required': ['potential_allergy'],\n  'properties': {\n    'potential_allergy': {\n      'type': 'boolean', \n      'description': 'Does the patient have a potential allergy to the medication?'\n    }\n  }\n}\n```\n",
              "tools": [],
              "top_p": 1.0,
              "temperature": 1.0,
              "tool_resources": {},
              "metadata": {},
              "response_format": {
                "type": "json_object"
              }
            },
            {
              "id": "asst_ke8wQ7jBRqXQRWMTnHeoMe3v",
              "object": "assistant",
              "created_at": 1715670220,
              "name": "Medication allergy assistant",
              "description": null,
              "model": "gpt-4-0125-preview",
              "instructions": "You are a subagent in a medical AI system. Your task is to examine a patient profile to determine if they may be allergic to a particular medication. When making your decision, take into account both formally documented allergies, as well as information that suggests a possible allergy. Err on the side of caution. If there is a potential allergy, the medication will be flagged for human review. The next two messages will contain the free-form patient profile, then the name of the medication. You should then respond with your decision regarding whether or not the patient has an allergy to the medication. \n\nYou MUST respond in JSON and you MUST follow the JSON schema provided below. NEVER deviate from the schema. Here is the schema:\n\n```\n{\n  'type': 'object',\n  'required': ['potential_allergy'],\n  'properties': {\n    'potential_allergy': {\n      'type': 'boolean', \n      'description': 'Does the patient have a potential allergy to the medication?'\n    }\n  }\n}\n```\n",
              "tools": [],
              "top_p": 1.0,
              "temperature": 1.0,
              "tool_resources": {},
              "metadata": {},
              "response_format": {
                "type": "json_object"
              }
            },
            {
              "id": "asst_9nEvyPYWdFYe5E3ySMPSdHwQ",
              "object": "assistant",
              "created_at": 1715670207,
              "name": "Medication list assistant",
              "description": null,
              "model": "gpt-4-0125-preview",
              "instructions": "You are a subagent in a medical AI system. Your task is to extract a list of medications from a patient profile. \n\nYou MUST respond in JSON and you MUST follow the JSON schema provided below. NEVER deviate from the schema. Here is the schema:\n\n```\n{\n  'type': 'object',\n  'required': ['medications', 'error'],\n  'properties': {\n    'medications': {\n      'type': 'array',\n      'description': 'Array of medication objects',\n       'items': {\n        'type': 'object',\n        'required': ['name', 'dose', 'dose_units', 'frequency', 'PRN'],\n        'properties': {\n          'name': {\n            'type': 'string'\n          },\n          'dose': {\n            'type': 'number'\n          },\n          'dose_units': {\n            'enum': ['microg', 'mg', 'g', 'mL'],\n          },\n          'frequency': {\n            'enum': ['daily', 'mane', 'midi', 'nocte', 'BD', 'TDS', 'QID'],\n          },\n          'PRN': {\n            'type': 'boolean'\n          }\n        }\n       }\n    },\n    'error': {\n      'type': 'boolean',\n      'description': 'Whether an error is returned'\n    },\n    'error_message': {\n      'type': 'string', \n      'description': 'If an error is returned, a message explaining the error (e.g. The dose of thyroxine was unclear).'\n    }\n  }\n}\n```\n\nErr on the side of caution and be conservative. You may return an error if you do not recognise the name of a medication (there is always the possibility of a typographic error), or the information given does not conform to the medication schema (for example, the dose is given in a non-permissible unit), or if there is conflicting information, or if the information is unclear for any other reason. If in doubt, just return an error. This will prompt clarifying information to be sought. If no medications are listed in the patient profile, do not return an error, just return an empty list of medications. A medication allergy is not a reason to return an error, as there are other subagents responsible for detecting potential medication allergies.\n\nThe next message will contain the free-form patient profile.",
              "tools": [],
              "top_p": 1.0,
              "temperature": 1.0,
              "tool_resources": {},
              "metadata": {},
              "response_format": {
                "type": "json_object"
              }
            },
            {
              "id": "asst_IqOSnytChU9SlctBnYwcZqPv",
              "object": "assistant",
              "created_at": 1715670201,
              "name": "BP target factors assistant",
              "description": null,
              "model": "gpt-4-0125-preview",
              "instructions": "You are an agent that forms part of a constellation advising a General Practitioner (GP) on the management of hypertension. Your specific task is to extract from a free-form patient profile any factors that are relevant to determining their blood pressure (BP) target.\n\nYou MUST respond in JSON and you MUST follow the JSON schema provided below. The keys in the schema each represent a factor that is relevant to determining a patient's blood pressure target. For each factor, provide a boolean value indicating whether the factor applies to the patient. NEVER deviate from the schema. Here is the schema:\n\n```\n{\n  'type': 'object',\n  'properties': {\n    'high_CVR': {\n      'type': 'boolean',\n      'description': ['Does the patient have calculated absolute cardiovascular risk > 15%?'\n    },\n    'over_75': {\n      'type': 'boolean',\n      'description': 'Is the patient aged over 75?'\n    },\n    'CKD': {\n      'type': 'boolean',\n      'description': 'Does the patient have chronic kidney disease?'\n    },\n    'diabetes': {\n      'type': 'boolean',\n      'description': 'Does the patient have diabetes?'\n    },\n    'stroke_prevention_prioritised': {\n      'type': 'boolean',\n      'description': 'Has stroke prevention been identified as a clinical priority for this patient?'\n    },\n    'moderate_CVR': {\n      'type': 'boolean',\n      'description': 'Does the patient have cardiovascular risk 10–15%?'\n    },\n    'stroke_history': {\n      'type': 'boolean',\n      'description': 'Does the patient have a history of stroke or TIA?'\n      },\n    'PAD': {\n      'type': 'boolean',\n      'description': 'Does the patient have peripheral artery disease?'\n    }\n  'required': ['high_CVR', 'over_75', 'CKD', 'diabetes', 'stroke_prevention_prioritised', 'moderate_CVR', 'stroke_history', 'PAD']\n}\n```\n\nIt is important to note that calculating absolute cardiovascular risk is done with a specific algorithm, so do not assume a value for CVD risk unless it is explicitly provided.\n\nThe next message will contain the free-form patient profile.",
              "tools": [],
              "top_p": 1.0,
              "temperature": 1.0,
              "tool_resources": {},
              "metadata": {},
              "response_format": {
                "type": "json_object"
              }
            },
            {
              "id": "asst_IRPENJ4gByo19XBSrbqLC0F2",
              "object": "assistant",
              "created_at": 1715670116,
              "name": "Medication allergy assistant",
              "description": null,
              "model": "gpt-4-0125-preview",
              "instructions": "You are a subagent in a medical AI system. Your task is to examine a patient profile to determine if they may be allergic to a particular medication. When making your decision, take into account both formally documented allergies, as well as information that suggests a possible allergy. Err on the side of caution. If there is a potential allergy, the medication will be flagged for human review. The next two messages will contain the free-form patient profile, then the name of the medication. You should then respond with your decision regarding whether or not the patient has an allergy to the medication. \n\nYou MUST respond in JSON and you MUST follow the JSON schema provided below. NEVER deviate from the schema. Here is the schema:\n\n```\n{\n  'type': 'object',\n  'required': ['potential_allergy'],\n  'properties': {\n    'potential_allergy': {\n      'type': 'boolean', \n      'description': 'Does the patient have a potential allergy to the medication?'\n    }\n  }\n}\n```\n",
              "tools": [],
              "top_p": 1.0,
              "temperature": 1.0,
              "tool_resources": {},
              "metadata": {},
              "response_format": {
                "type": "json_object"
              }
            },
            {
              "id": "asst_YBOHtVle2htPUvabOgdBF0bH",
              "object": "assistant",
              "created_at": 1715670112,
              "name": "Medication allergy assistant",
              "description": null,
              "model": "gpt-4-0125-preview",
              "instructions": "You are a subagent in a medical AI system. Your task is to examine a patient profile to determine if they may be allergic to a particular medication. When making your decision, take into account both formally documented allergies, as well as information that suggests a possible allergy. Err on the side of caution. If there is a potential allergy, the medication will be flagged for human review. The next two messages will contain the free-form patient profile, then the name of the medication. You should then respond with your decision regarding whether or not the patient has an allergy to the medication. \n\nYou MUST respond in JSON and you MUST follow the JSON schema provided below. NEVER deviate from the schema. Here is the schema:\n\n```\n{\n  'type': 'object',\n  'required': ['potential_allergy'],\n  'properties': {\n    'potential_allergy': {\n      'type': 'boolean', \n      'description': 'Does the patient have a potential allergy to the medication?'\n    }\n  }\n}\n```\n",
              "tools": [],
              "top_p": 1.0,
              "temperature": 1.0,
              "tool_resources": {},
              "metadata": {},
              "response_format": {
                "type": "json_object"
              }
            },
            {
              "id": "asst_7PwTqGBzHIZIsg0NibONhEQn",
              "object": "assistant",
              "created_at": 1715670108,
              "name": "Medication allergy assistant",
              "description": null,
              "model": "gpt-4-0125-preview",
              "instructions": "You are a subagent in a medical AI system. Your task is to examine a patient profile to determine if they may be allergic to a particular medication. When making your decision, take into account both formally documented allergies, as well as information that suggests a possible allergy. Err on the side of caution. If there is a potential allergy, the medication will be flagged for human review. The next two messages will contain the free-form patient profile, then the name of the medication. You should then respond with your decision regarding whether or not the patient has an allergy to the medication. \n\nYou MUST respond in JSON and you MUST follow the JSON schema provided below. NEVER deviate from the schema. Here is the schema:\n\n```\n{\n  'type': 'object',\n  'required': ['potential_allergy'],\n  'properties': {\n    'potential_allergy': {\n      'type': 'boolean', \n      'description': 'Does the patient have a potential allergy to the medication?'\n    }\n  }\n}\n```\n",
              "tools": [],
              "top_p": 1.0,
              "temperature": 1.0,
              "tool_resources": {},
              "metadata": {},
              "response_format": {
                "type": "json_object"
              }
            },
            {
              "id": "asst_LoTCkjz0cjl0xGLcrvBDZVy9",
              "object": "assistant",
              "created_at": 1715670104,
              "name": "Medication allergy assistant",
              "description": null,
              "model": "gpt-4-0125-preview",
              "instructions": "You are a subagent in a medical AI system. Your task is to examine a patient profile to determine if they may be allergic to a particular medication. When making your decision, take into account both formally documented allergies, as well as information that suggests a possible allergy. Err on the side of caution. If there is a potential allergy, the medication will be flagged for human review. The next two messages will contain the free-form patient profile, then the name of the medication. You should then respond with your decision regarding whether or not the patient has an allergy to the medication. \n\nYou MUST respond in JSON and you MUST follow the JSON schema provided below. NEVER deviate from the schema. Here is the schema:\n\n```\n{\n  'type': 'object',\n  'required': ['potential_allergy'],\n  'properties': {\n    'potential_allergy': {\n      'type': 'boolean', \n      'description': 'Does the patient have a potential allergy to the medication?'\n    }\n  }\n}\n```\n",
              "tools": [],
              "top_p": 1.0,
              "temperature": 1.0,
              "tool_resources": {},
              "metadata": {},
              "response_format": {
                "type": "json_object"
              }
            },
            {
              "id": "asst_Z7YQzCx7yuRvnnE4Tbc9qs3s",
              "object": "assistant",
              "created_at": 1715670092,
              "name": "Medication list assistant",
              "description": null,
              "model": "gpt-4-0125-preview",
              "instructions": "You are a subagent in a medical AI system. Your task is to extract a list of medications from a patient profile. \n\nYou MUST respond in JSON and you MUST follow the JSON schema provided below. NEVER deviate from the schema. Here is the schema:\n\n```\n{\n  'type': 'object',\n  'required': ['medications', 'error'],\n  'properties': {\n    'medications': {\n      'type': 'array',\n      'description': 'Array of medication objects',\n       'items': {\n        'type': 'object',\n        'required': ['name', 'dose', 'dose_units', 'frequency', 'PRN'],\n        'properties': {\n          'name': {\n            'type': 'string'\n          },\n          'dose': {\n            'type': 'number'\n          },\n          'dose_units': {\n            'enum': ['microg', 'mg', 'g', 'mL'],\n          },\n          'frequency': {\n            'enum': ['daily', 'mane', 'midi', 'nocte', 'BD', 'TDS', 'QID'],\n          },\n          'PRN': {\n            'type': 'boolean'\n          }\n        }\n       }\n    },\n    'error': {\n      'type': 'boolean',\n      'description': 'Whether an error is returned'\n    },\n    'error_message': {\n      'type': 'string', \n      'description': 'If an error is returned, a message explaining the error (e.g. The dose of thyroxine was unclear).'\n    }\n  }\n}\n```\n\nErr on the side of caution and be conservative. You may return an error if you do not recognise the name of a medication (there is always the possibility of a typographic error), or the information given does not conform to the medication schema (for example, the dose is given in a non-permissible unit), or if there is conflicting information, or if the information is unclear for any other reason. If in doubt, just return an error. This will prompt clarifying information to be sought. If no medications are listed in the patient profile, do not return an error, just return an empty list of medications. A medication allergy is not a reason to return an error, as there are other subagents responsible for detecting potential medication allergies.\n\nThe next message will contain the free-form patient profile.",
              "tools": [],
              "top_p": 1.0,
              "temperature": 1.0,
              "tool_resources": {},
              "metadata": {},
              "response_format": {
                "type": "json_object"
              }
            },
            {
              "id": "asst_DnvVBWYHVxL2x9LgdXjixlmp",
              "object": "assistant",
              "created_at": 1715670085,
              "name": "BP target factors assistant",
              "description": null,
              "model": "gpt-4-0125-preview",
              "instructions": "You are an agent that forms part of a constellation advising a General Practitioner (GP) on the management of hypertension. Your specific task is to extract from a free-form patient profile any factors that are relevant to determining their blood pressure (BP) target.\n\nYou MUST respond in JSON and you MUST follow the JSON schema provided below. The keys in the schema each represent a factor that is relevant to determining a patient's blood pressure target. For each factor, provide a boolean value indicating whether the factor applies to the patient. NEVER deviate from the schema. Here is the schema:\n\n```\n{\n  'type': 'object',\n  'properties': {\n    'high_CVR': {\n      'type': 'boolean',\n      'description': ['Does the patient have calculated absolute cardiovascular risk > 15%?'\n    },\n    'over_75': {\n      'type': 'boolean',\n      'description': 'Is the patient aged over 75?'\n    },\n    'CKD': {\n      'type': 'boolean',\n      'description': 'Does the patient have chronic kidney disease?'\n    },\n    'diabetes': {\n      'type': 'boolean',\n      'description': 'Does the patient have diabetes?'\n    },\n    'stroke_prevention_prioritised': {\n      'type': 'boolean',\n      'description': 'Has stroke prevention been identified as a clinical priority for this patient?'\n    },\n    'moderate_CVR': {\n      'type': 'boolean',\n      'description': 'Does the patient have cardiovascular risk 10–15%?'\n    },\n    'stroke_history': {\n      'type': 'boolean',\n      'description': 'Does the patient have a history of stroke or TIA?'\n      },\n    'PAD': {\n      'type': 'boolean',\n      'description': 'Does the patient have peripheral artery disease?'\n    }\n  'required': ['high_CVR', 'over_75', 'CKD', 'diabetes', 'stroke_prevention_prioritised', 'moderate_CVR', 'stroke_history', 'PAD']\n}\n```\n\nIt is important to note that calculating absolute cardiovascular risk is done with a specific algorithm, so do not assume a value for CVD risk unless it is explicitly provided.\n\nThe next message will contain the free-form patient profile.",
              "tools": [],
              "top_p": 1.0,
              "temperature": 1.0,
              "tool_resources": {},
              "metadata": {},
              "response_format": {
                "type": "json_object"
              }
            },
            {
              "id": "asst_ipCbBeNpYVRYCjTkBf92VmfV",
              "object": "assistant",
              "created_at": 1715669995,
              "name": "Medication allergy assistant",
              "description": null,
              "model": "gpt-4-0125-preview",
              "instructions": "You are a subagent in a medical AI system. Your task is to examine a patient profile to determine if they may be allergic to a particular medication. When making your decision, take into account both formally documented allergies, as well as information that suggests a possible allergy. Err on the side of caution. If there is a potential allergy, the medication will be flagged for human review. The next two messages will contain the free-form patient profile, then the name of the medication. You should then respond with your decision regarding whether or not the patient has an allergy to the medication. \n\nYou MUST respond in JSON and you MUST follow the JSON schema provided below. NEVER deviate from the schema. Here is the schema:\n\n```\n{\n  'type': 'object',\n  'required': ['potential_allergy'],\n  'properties': {\n    'potential_allergy': {\n      'type': 'boolean', \n      'description': 'Does the patient have a potential allergy to the medication?'\n    }\n  }\n}\n```\n",
              "tools": [],
              "top_p": 1.0,
              "temperature": 1.0,
              "tool_resources": {},
              "metadata": {},
              "response_format": {
                "type": "json_object"
              }
            },
            {
              "id": "asst_d0vdDQvHKU4iQRCyfuzQMIfj",
              "object": "assistant",
              "created_at": 1715669991,
              "name": "Medication allergy assistant",
              "description": null,
              "model": "gpt-4-0125-preview",
              "instructions": "You are a subagent in a medical AI system. Your task is to examine a patient profile to determine if they may be allergic to a particular medication. When making your decision, take into account both formally documented allergies, as well as information that suggests a possible allergy. Err on the side of caution. If there is a potential allergy, the medication will be flagged for human review. The next two messages will contain the free-form patient profile, then the name of the medication. You should then respond with your decision regarding whether or not the patient has an allergy to the medication. \n\nYou MUST respond in JSON and you MUST follow the JSON schema provided below. NEVER deviate from the schema. Here is the schema:\n\n```\n{\n  'type': 'object',\n  'required': ['potential_allergy'],\n  'properties': {\n    'potential_allergy': {\n      'type': 'boolean', \n      'description': 'Does the patient have a potential allergy to the medication?'\n    }\n  }\n}\n```\n",
              "tools": [],
              "top_p": 1.0,
              "temperature": 1.0,
              "tool_resources": {},
              "metadata": {},
              "response_format": {
                "type": "json_object"
              }
            },
            {
              "id": "asst_fx7UAAYdt3GRgWtePj3pqxVN",
              "object": "assistant",
              "created_at": 1715669987,
              "name": "Medication allergy assistant",
              "description": null,
              "model": "gpt-4-0125-preview",
              "instructions": "You are a subagent in a medical AI system. Your task is to examine a patient profile to determine if they may be allergic to a particular medication. When making your decision, take into account both formally documented allergies, as well as information that suggests a possible allergy. Err on the side of caution. If there is a potential allergy, the medication will be flagged for human review. The next two messages will contain the free-form patient profile, then the name of the medication. You should then respond with your decision regarding whether or not the patient has an allergy to the medication. \n\nYou MUST respond in JSON and you MUST follow the JSON schema provided below. NEVER deviate from the schema. Here is the schema:\n\n```\n{\n  'type': 'object',\n  'required': ['potential_allergy'],\n  'properties': {\n    'potential_allergy': {\n      'type': 'boolean', \n      'description': 'Does the patient have a potential allergy to the medication?'\n    }\n  }\n}\n```\n",
              "tools": [],
              "top_p": 1.0,
              "temperature": 1.0,
              "tool_resources": {},
              "metadata": {},
              "response_format": {
                "type": "json_object"
              }
            },
            {
              "id": "asst_dcunqamasWfck8iqJaTtbufp",
              "object": "assistant",
              "created_at": 1715669978,
              "name": "Medication list assistant",
              "description": null,
              "model": "gpt-4-0125-preview",
              "instructions": "You are a subagent in a medical AI system. Your task is to extract a list of medications from a patient profile. \n\nYou MUST respond in JSON and you MUST follow the JSON schema provided below. NEVER deviate from the schema. Here is the schema:\n\n```\n{\n  'type': 'object',\n  'required': ['medications', 'error'],\n  'properties': {\n    'medications': {\n      'type': 'array',\n      'description': 'Array of medication objects',\n       'items': {\n        'type': 'object',\n        'required': ['name', 'dose', 'dose_units', 'frequency', 'PRN'],\n        'properties': {\n          'name': {\n            'type': 'string'\n          },\n          'dose': {\n            'type': 'number'\n          },\n          'dose_units': {\n            'enum': ['microg', 'mg', 'g', 'mL'],\n          },\n          'frequency': {\n            'enum': ['daily', 'mane', 'midi', 'nocte', 'BD', 'TDS', 'QID'],\n          },\n          'PRN': {\n            'type': 'boolean'\n          }\n        }\n       }\n    },\n    'error': {\n      'type': 'boolean',\n      'description': 'Whether an error is returned'\n    },\n    'error_message': {\n      'type': 'string', \n      'description': 'If an error is returned, a message explaining the error (e.g. The dose of thyroxine was unclear).'\n    }\n  }\n}\n```\n\nErr on the side of caution and be conservative. You may return an error if you do not recognise the name of a medication (there is always the possibility of a typographic error), or the information given does not conform to the medication schema (for example, the dose is given in a non-permissible unit), or if there is conflicting information, or if the information is unclear for any other reason. If in doubt, just return an error. This will prompt clarifying information to be sought. If no medications are listed in the patient profile, do not return an error, just return an empty list of medications. A medication allergy is not a reason to return an error, as there are other subagents responsible for detecting potential medication allergies.\n\nThe next message will contain the free-form patient profile.",
              "tools": [],
              "top_p": 1.0,
              "temperature": 1.0,
              "tool_resources": {},
              "metadata": {},
              "response_format": {
                "type": "json_object"
              }
            }
          ],
          "first_id": "asst_gxDbA4CKIXfCaZVW0eVd4cPR",
          "last_id": "asst_dcunqamasWfck8iqJaTtbufp",
          "has_more": true
        }
  recorded_at: 2024-05-21 01:09:39 GMT
  recorded_with: vcr/1.2.2, webmockr/0.9.0
- request:
    method: post
    uri: https://api.openai.com/v1/assistants/asst_gxDbA4CKIXfCaZVW0eVd4cPR/files
    body:
      encoding: ''
      string: '{"file_id":"file-P6XH5bDZSo311u3yKlM6bFFn"}'
    headers:
      Accept: application/json, text/xml, application/xml, */*
      Content-Type: ''
      Authorization: My bearer token is safe
      OpenAI-Beta: assistants=v2
  response:
    status:
      status_code: 200
      category: Success
      reason: OK
      message: 'Success: (200) OK'
    headers:
      date: Tue, 21 May 2024 01:09:35 GMT
      content-type: application/json
      openai-version: '2020-10-01'
      openai-organization: user-xzxbylwbsz2obysv34wdfreh
      x-request-id: req_567e55f2a92ec6588013a6ae8ff281a0
      openai-processing-ms: '1722'
      strict-transport-security: max-age=15724800; includeSubDomains
      cf-cache-status: DYNAMIC
      server: cloudflare
      cf-ray: 8870ae81e8b7274b-ADL
      content-encoding: gzip
      alt-svc: h3=":443"; ma=86400
    body:
      encoding: ''
      file: no
      string: |-
        {
          "id": "file-P6XH5bDZSo311u3yKlM6bFFn",
          "object": "assistant.file",
          "created_at": 1716253773,
          "assistant_id": "asst_gxDbA4CKIXfCaZVW0eVd4cPR"
        }
  recorded_at: 2024-05-21 01:09:39 GMT
  recorded_with: vcr/1.2.2, webmockr/0.9.0
- request:
    method: get
    uri: https://api.openai.com/v1/assistants/asst_gxDbA4CKIXfCaZVW0eVd4cPR/files?limit=20&order=desc
    body:
      encoding: ''
      string: ''
    headers:
      Accept: application/json, text/xml, application/xml, */*
      Authorization: My bearer token is safe
      OpenAI-Beta: assistants=v2
  response:
    status:
      status_code: 200
      category: Success
      reason: OK
      message: 'Success: (200) OK'
    headers:
      date: Tue, 21 May 2024 01:09:35 GMT
      content-type: application/json
      openai-version: '2020-10-01'
      openai-organization: user-xzxbylwbsz2obysv34wdfreh
      x-request-id: req_781a3a8933535647804bde774255930f
      openai-processing-ms: '126'
      strict-transport-security: max-age=15724800; includeSubDomains
      cf-cache-status: DYNAMIC
      server: cloudflare
      cf-ray: 8870ae8f6dee274b-ADL
      content-encoding: gzip
      alt-svc: h3=":443"; ma=86400
    body:
      encoding: ''
      file: no
      string: |-
        {
          "object": "list",
          "data": [
            {
              "id": "file-P6XH5bDZSo311u3yKlM6bFFn",
              "object": "assistant.file",
              "created_at": 1716253773,
              "assistant_id": "asst_gxDbA4CKIXfCaZVW0eVd4cPR"
            }
          ],
          "first_id": "file-P6XH5bDZSo311u3yKlM6bFFn",
          "last_id": "file-P6XH5bDZSo311u3yKlM6bFFn",
          "has_more": false
        }
  recorded_at: 2024-05-21 01:09:39 GMT
  recorded_with: vcr/1.2.2, webmockr/0.9.0
- request:
    method: get
    uri: https://api.openai.com/v1/assistants/asst_gxDbA4CKIXfCaZVW0eVd4cPR
    body:
      encoding: ''
      string: ''
    headers:
      Accept: application/json, text/xml, application/xml, */*
      Authorization: My bearer token is safe
      OpenAI-Beta: assistants=v2
  response:
    status:
      status_code: 200
      category: Success
      reason: OK
      message: 'Success: (200) OK'
    headers:
      date: Tue, 21 May 2024 01:09:36 GMT
      content-type: application/json
      openai-version: '2020-10-01'
      openai-organization: user-xzxbylwbsz2obysv34wdfreh
      x-request-id: req_8e8d83ec461b340256acb656d9302a09
      openai-processing-ms: '41'
      strict-transport-security: max-age=15724800; includeSubDomains
      cf-cache-status: DYNAMIC
      server: cloudflare
      cf-ray: 8870ae935bf1274b-ADL
      content-encoding: gzip
      alt-svc: h3=":443"; ma=86400
    body:
      encoding: ''
      file: no
      string: |-
        {
          "id": "asst_gxDbA4CKIXfCaZVW0eVd4cPR",
          "object": "assistant",
          "created_at": 1716253772,
          "name": "Socrates",
          "description": null,
          "model": "gpt-4o",
          "instructions": null,
          "tools": [
            {
              "type": "file_search"
            }
          ],
          "top_p": 1.0,
          "temperature": 1.0,
          "tool_resources": {
            "file_search": {
              "vector_store_ids": [
                "vs_wppumFQRMBq2Fx0Llbu4JIqA"
              ]
            }
          },
          "metadata": {},
          "response_format": {
            "type": "text"
          }
        }
  recorded_at: 2024-05-21 01:09:39 GMT
  recorded_with: vcr/1.2.2, webmockr/0.9.0
- request:
    method: get
    uri: https://api.openai.com/v1/assistants/asst_gxDbA4CKIXfCaZVW0eVd4cPR/files/file-P6XH5bDZSo311u3yKlM6bFFn
    body:
      encoding: ''
      string: ''
    headers:
      Accept: application/json, text/xml, application/xml, */*
      Authorization: My bearer token is safe
      OpenAI-Beta: assistants=v2
  response:
    status:
      status_code: 200
      category: Success
      reason: OK
      message: 'Success: (200) OK'
    headers:
      date: Tue, 21 May 2024 01:09:36 GMT
      content-type: application/json
      openai-version: '2020-10-01'
      openai-organization: user-xzxbylwbsz2obysv34wdfreh
      x-request-id: req_63bdc60e124e8d194cda12c609cc1cc3
      openai-processing-ms: '169'
      strict-transport-security: max-age=15724800; includeSubDomains
      cf-cache-status: DYNAMIC
      server: cloudflare
      cf-ray: 8870ae96987b274b-ADL
      content-encoding: gzip
      alt-svc: h3=":443"; ma=86400
    body:
      encoding: ''
      file: no
      string: |-
        {
          "id": "file-P6XH5bDZSo311u3yKlM6bFFn",
          "object": "assistant.file",
          "created_at": 1716253773,
          "assistant_id": "asst_gxDbA4CKIXfCaZVW0eVd4cPR"
        }
  recorded_at: 2024-05-21 01:09:39 GMT
  recorded_with: vcr/1.2.2, webmockr/0.9.0
- request:
    method: post
    uri: https://api.openai.com/v1/assistants/asst_gxDbA4CKIXfCaZVW0eVd4cPR
    body:
      encoding: ''
      string: '{"model":"gpt-4o","name":"Aristotle"}'
    headers:
      Accept: application/json, text/xml, application/xml, */*
      Authorization: My bearer token is safe
      OpenAI-Beta: assistants=v2
      Content-Type: application/json
  response:
    status:
      status_code: 200
      category: Success
      reason: OK
      message: 'Success: (200) OK'
    headers:
      date: Tue, 21 May 2024 01:09:37 GMT
      content-type: application/json
      openai-version: '2020-10-01'
      openai-organization: user-xzxbylwbsz2obysv34wdfreh
      x-request-id: req_0246dc3692b84e6cb40ce5b8891a7402
      openai-processing-ms: '113'
      strict-transport-security: max-age=15724800; includeSubDomains
      cf-cache-status: DYNAMIC
      server: cloudflare
      cf-ray: 8870ae99ad7e274b-ADL
      content-encoding: gzip
      alt-svc: h3=":443"; ma=86400
    body:
      encoding: ''
      file: no
      string: |-
        {
          "id": "asst_gxDbA4CKIXfCaZVW0eVd4cPR",
          "object": "assistant",
          "created_at": 1716253772,
          "name": "Aristotle",
          "description": null,
          "model": "gpt-4o",
          "instructions": null,
          "tools": [
            {
              "type": "file_search"
            }
          ],
          "top_p": 1.0,
          "temperature": 1.0,
          "tool_resources": {
            "file_search": {
              "vector_store_ids": [
                "vs_wppumFQRMBq2Fx0Llbu4JIqA"
              ]
            }
          },
          "metadata": {},
          "response_format": {
            "type": "text"
          }
        }
  recorded_at: 2024-05-21 01:09:39 GMT
  recorded_with: vcr/1.2.2, webmockr/0.9.0
- request:
    method: delete
    uri: https://api.openai.com/v1/assistants/asst_gxDbA4CKIXfCaZVW0eVd4cPR/files/file-P6XH5bDZSo311u3yKlM6bFFn
    body:
      encoding: ''
      string: ''
    headers:
      Accept: application/json, text/xml, application/xml, */*
      Content-Type: ''
      Authorization: My bearer token is safe
      OpenAI-Beta: assistants=v2
  response:
    status:
      status_code: 200
      category: Success
      reason: OK
      message: 'Success: (200) OK'
    headers:
      date: Tue, 21 May 2024 01:09:38 GMT
      content-type: application/json
      openai-version: '2020-10-01'
      openai-organization: user-xzxbylwbsz2obysv34wdfreh
      x-request-id: req_78991cb270866016826b446bafa33a84
      openai-processing-ms: '928'
      strict-transport-security: max-age=15724800; includeSubDomains
      cf-cache-status: DYNAMIC
      server: cloudflare
      cf-ray: 8870ae9caadc274b-ADL
      content-encoding: gzip
      alt-svc: h3=":443"; ma=86400
    body:
      encoding: ''
      file: no
      string: |-
        {
          "id": "file-P6XH5bDZSo311u3yKlM6bFFn",
          "object": "assistant.file.deleted",
          "deleted": true
        }
  recorded_at: 2024-05-21 01:09:39 GMT
  recorded_with: vcr/1.2.2, webmockr/0.9.0
- request:
    method: delete
    uri: https://api.openai.com/v1/assistants/asst_gxDbA4CKIXfCaZVW0eVd4cPR
    body:
      encoding: ''
      string: ''
    headers:
      Accept: application/json, text/xml, application/xml, */*
      Content-Type: ''
      Authorization: My bearer token is safe
      OpenAI-Beta: assistants=v2
  response:
    status:
      status_code: 200
      category: Success
      reason: OK
      message: 'Success: (200) OK'
    headers:
      date: Tue, 21 May 2024 01:09:38 GMT
      content-type: application/json
      openai-version: '2020-10-01'
      openai-organization: user-xzxbylwbsz2obysv34wdfreh
      x-request-id: req_cbe48b22d8347849f6e122e867fd2c5f
      openai-processing-ms: '36'
      strict-transport-security: max-age=15724800; includeSubDomains
      cf-cache-status: DYNAMIC
      server: cloudflare
      cf-ray: 8870aea4a8cc274b-ADL
      content-encoding: gzip
      alt-svc: h3=":443"; ma=86400
    body:
      encoding: ''
      file: no
      string: |-
        {
          "id": "asst_gxDbA4CKIXfCaZVW0eVd4cPR",
          "object": "assistant.deleted",
          "deleted": true
        }
  recorded_at: 2024-05-21 01:09:39 GMT
  recorded_with: vcr/1.2.2, webmockr/0.9.0
- request:
    method: post
    uri: https://api.openai.com/v1/assistants
    body:
      encoding: ''
      string: '{"model":"gpt-4o","name":"Jason","response_format":{"type":"json_object"}}'
    headers:
      Accept: application/json, text/xml, application/xml, */*
      Authorization: My bearer token is safe
      OpenAI-Beta: assistants=v2
      Content-Type: application/json
  response:
    status:
      status_code: 200
      category: Success
      reason: OK
      message: 'Success: (200) OK'
    headers:
      date: Tue, 21 May 2024 01:09:39 GMT
      content-type: application/json
      openai-version: '2020-10-01'
      openai-organization: user-xzxbylwbsz2obysv34wdfreh
      x-request-id: req_1b673a4e4694dcb7880e103628fc548b
      openai-processing-ms: '107'
      strict-transport-security: max-age=15724800; includeSubDomains
      cf-cache-status: DYNAMIC
      server: cloudflare
      cf-ray: 8870aea6fc99274b-ADL
      content-encoding: gzip
      alt-svc: h3=":443"; ma=86400
    body:
      encoding: ''
      file: no
      string: |-
        {
          "id": "asst_LHLdSCsakltqpBydRcoTbaWD",
          "object": "assistant",
          "created_at": 1716253779,
          "name": "Jason",
          "description": null,
          "model": "gpt-4o",
          "instructions": null,
          "tools": [],
          "top_p": 1.0,
          "temperature": 1.0,
          "tool_resources": {},
          "metadata": {},
          "response_format": {
            "type": "json_object"
          }
        }
  recorded_at: 2024-05-21 01:09:39 GMT
  recorded_with: vcr/1.2.2, webmockr/0.9.0
